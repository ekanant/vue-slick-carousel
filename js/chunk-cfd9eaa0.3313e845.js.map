{"version":3,"sources":["webpack:///./src/SliderDots.vue","webpack:///src/SliderDots.vue","webpack:///./src/SliderDots.vue?795c","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/core-js/internals/is-regexp.js"],"names":["staticRenderFns","dots","spec","infinite","Math","ceil","slideCount","slidesToScroll","name","props","render","this","slidesToShow","message","index","i","currentSlide","component","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","arrayPush","push","min","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","length","separator","limit","string","String","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","slice","apply","test","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","p","q","A","e","z","isObject","classof","wellKnownSymbol","MATCH","module","exports","it"],"mappings":"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","file":"js/chunk-cfd9eaa0.3313e845.js","sourcesContent":["var render, staticRenderFns\nimport script from \"./SliderDots.vue?vue&type=script&lang=js&\"\nexport * from \"./SliderDots.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\nimport { PROP_KEYS } from './innerSliderUtils'\n\nconst getDotCount = spec => {\n  let dots\n\n  if (spec.infinite) {\n    dots = Math.ceil(spec.slideCount / spec.slidesToScroll)\n  } else {\n    dots =\n      Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1\n  }\n\n  return dots\n}\n\nexport default {\n  name: 'SliderDots',\n  props: PROP_KEYS.DOT,\n  render() {\n    let dotCount = getDotCount({\n      slideCount: this.slideCount,\n      slidesToScroll: this.slidesToScroll,\n      slidesToShow: this.slidesToShow,\n      infinite: this.infinite,\n    })\n\n    // Apply join & split to Array to pre-fill it for IE8\n    //\n    // Credit: http://stackoverflow.com/a/13735425/1849458\n    let dots = Array.apply(\n      null,\n      Array(dotCount + 1)\n        .join('0')\n        .split(''),\n    ).map((x, i) => {\n      let leftBound = i * this.slidesToScroll\n      let rightBound = i * this.slidesToScroll + (this.slidesToScroll - 1)\n      let className = {\n        'slick-active':\n          this.currentSlide >= leftBound && this.currentSlide <= rightBound,\n      }\n\n      let dotOptions = {\n        message: 'dots',\n        index: i,\n        slidesToScroll: this.slidesToScroll,\n        currentSlide: this.currentSlide,\n      }\n\n      const customPaging = this.customPaging ? (\n        this.customPaging(i)[0]\n      ) : (\n        <button>{i + 1}</button>\n      )\n\n      return (\n        <li\n          key={i}\n          class={className}\n          onClick={() => this.$emit('dotClicked', dotOptions)}>\n          {customPaging}\n        </li>\n      )\n    })\n\n    const wrapperStyle = { display: 'block' }\n    const wrapperClass = {\n      [this.dotsClass]: true,\n    }\n\n    return (\n      <ul style={wrapperStyle} class={wrapperClass}>\n        {dots}\n      </ul>\n    )\n  },\n}\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./SliderDots.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./SliderDots.vue?vue&type=script&lang=js&\"","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n"],"sourceRoot":""}